// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"go-notebook/dependency-injection/config"
	"go-notebook/dependency-injection/repo"
	"go-notebook/dependency-injection/service"
)

// Injectors from wire.go:

func InitializeApplication() (*Application, error) {
	configConfig, err := config.NewConfig()
	if err != nil {
		return nil, err
	}
	lru, err := provideCacheLRU(configConfig)
	if err != nil {
		return nil, err
	}
	cacheService, err := service.NewCacheService(lru)
	if err != nil {
		return nil, err
	}
	userDao, err := provideUserDao(configConfig)
	if err != nil {
		return nil, err
	}
	userRepo, err := repo.NewUserRepo(userDao)
	if err != nil {
		return nil, err
	}
	userService, err := service.NewUserService(userRepo)
	if err != nil {
		return nil, err
	}
	orderDao, err := provideOrderDao(configConfig)
	if err != nil {
		return nil, err
	}
	orderRepo, err := repo.NewOrderRepo(orderDao)
	if err != nil {
		return nil, err
	}
	orderService, err := service.NewOrderService(orderRepo)
	if err != nil {
		return nil, err
	}
	application := newApplication(cacheService, userService, orderService)
	return application, nil
}
